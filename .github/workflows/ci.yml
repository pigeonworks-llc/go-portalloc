name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24', '1.25']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Run vet
      run: go vet ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  # Aggregate job for branch protection
  all-tests:
    name: test
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    steps:
      - name: Check test matrix status
        if: needs.test.result != 'success'
        run: exit 1
      - name: Check lint status
        if: needs.lint.result != 'success'
        run: exit 1